function ionVol = ionVolumesFromAtomVolumes(ions,isotopeTable)
% ionVolumesFromAtomVolumes outputs a list of ion volumes based on the ions
% that are contained in the variable ions. This could be a categorical
% array of ions, or a whole pos variable. The ion volumes are simple adds
% of the individual atomic volumes as stored in the isotopeTable. These
% volumes are based on ????
%% input validation
if iscategorical(ions)
    cat = ca
    ions = string(ions);
elseif istable(ions)
    ions = string(ions.ion(ions.ionComplexity >= 1));
end
ions = table(ions, 'VariableNames', {'ionName'});


%% find AtomVolumes in isotopeTable
for  i = 1:height(ions)
    ionTableTest = ionConvertName(string(ions.ionName(i)));
    k = 0;
    for j = 1:height(ionTableTest)
        volumeElement = mean(isotopeTable.atomDensity(isotopeTable.element == ionTableTest.element(j)));
        k = k+volumeElement;
    end
    ionVolume(i,1) = k; 
end

ionVol = addvars(ions, ionVolume);
end
